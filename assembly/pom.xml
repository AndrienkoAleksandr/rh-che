<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012-2016 Codenvy, S.A. All rights reserved. This program 
    and the accompanying materials are made available under the terms of the 
    Eclipse Public License v1.0 which accompanies this distribution, and is available 
    at http://www.eclipse.org/legal/epl-v10.html Contributors: Codenvy, S.A. 
    - initial API and implementation -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>almighty-ide-parent</artifactId>
        <groupId>com.redhat.che</groupId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../invoker/rh-changes</relativePath>
    </parent>
    <artifactId>almighty-ide-assembly-parent</artifactId>
    <packaging>pom</packaging>
    <name>Almighty IDE assembly (parent)</name>
    <modules>
        <module>assembly-wsagent-war</module>
        <module>assembly-wsagent-server</module> 
        <module>assembly-ide-war</module>
        <module>assembly-wsmaster-war</module>
        <module>assembly-main</module>
    </modules>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.redhat.che</groupId>
                <artifactId>almighty-ide-assembly-ide-war</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>com.redhat.che</groupId>
                <artifactId>almighty-ide-assembly-wsagent-server</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>tar.gz</type>
            </dependency>
            <dependency>
                <groupId>com.redhat.che</groupId>
                <artifactId>almighty-ide-assembly-wsmaster-war</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>com.redhat.che</groupId>
                <artifactId>almighty-ide-assembly-wsagent-war</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>war</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-patched-files</id>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target
                                    name="copy original Che files that will be patched">
                                    <echo>Ant Copy</echo>
                                    <pathconvert pathsep=","
                                        property="pathForRequiredSourceFiles">
                                        <mappedresources>
                                            <fileset
                                                dir="${basedir}/src/main/patches"
                                                includes="**/*.patch"
                                                id="patchedFiles" />
                                            <globmapper from="*.patch"
                                                to="*" />
                                        </mappedresources>
                                    </pathconvert>
                                    <condition property="noFilesToPatch">
                                        <equals arg1="${pathForRequiredSourceFiles}" arg2="" trim="true"/>
                                    </condition>
                                    <copy
                                        todir="${project.build.directory}/patched-src"
                                        verbose="true">
                                        <fileset
                                            dir="${original-project-basedir}/src"
                                            includes="dummy,${pathForRequiredSourceFiles}" />
                                    </copy>
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>add-source-for-patched-files</id>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/patched-src/main/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-resource-for-patched-files</id>
                            <goals>
                                <goal>add-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.build.directory}/patched-src/main/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-web-resources</id>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/patched-src/main/webapp</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/webapp</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-patch-plugin</artifactId>
                    <version>1.2</version>
                    <executions>
                        <execution>
                            <id>patch-sources</id>
                            <goals>
                                <goal>apply</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <strictPatching>true</strictPatching>
                        <targetDirectory>${project.build.directory}/patched-src</targetDirectory>
                        <strip>1</strip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <warSourceDirectory>${project.build.directory}/patched-src/main/webapp</warSourceDirectory>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <dependentWarIncludes>**,META-INF/context.xml,WEB-INF/**</dependentWarIncludes>
                        <dependentWarExcludes>META-INF/MANIFEST.MF,META-INF/maven/**</dependentWarExcludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
